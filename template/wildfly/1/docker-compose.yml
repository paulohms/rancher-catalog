jiva-w:
  image: paulohms/jivaw:1.1
  restart: always
  environment:
    - IP_BD_JIVAW=${ip_bd}
    - PORTA_BD_JIVAW=${porta_bd}
    - SID_BD_JIVAW=${sid_bd}
    - USUARIO_BD_JIVAW=${usuario_bd}
    - SENHA_BD_JIVAW=${senha_bd}
    - PACOTE_JIVAW=jiva-w_3.20b263.pkg
    - TIPO_SERVIDOR=WILDFLY
    - TIPO_BD=Oracle
  links:
    - sas
  volumes: 
    - /home/mgeweb/dados-dos-clientes/{{ .Stack.Name }}/impressao/:/home/mgeweb/impressao # Modelos de Impressão
    - /home/mgeweb/dados-dos-clientes/{{ .Stack.Name }}/repositorio/:/home/mgeweb/repositorio # Repositório de arquivos
    - /home/mgeweb/dados-dos-clientes/{{ .Stack.Name }}/logs/:/home/mgeweb/wildfly_producao/standalone/log # logs do JBOSS
    - /home/mgeweb/dados-dos-clientes/{{ .Stack.Name }}/SanNFe/:/home/mgeweb/SanNFe # Certificados do SanNFe
    - /home/mgeweb/sankhyaw-wpm/pkgs/:/home/mgeweb/sankhyaw-wpm/pkgs # Pkgs Jiva-W
  command: ["/bin/sh","-c", "sed -i 's/-Xms1024M -Xmx1024M/${memoria_jboss}/g' /home/mgeweb/wildfly_producao/bin/standalone.conf && sudo chown -R mgeweb:mgeweb /home/mgeweb/sankhyaw-wpm/ && java -jar /home/mgeweb/DPM/docker-package-manager.jar && sudo /home/mgeweb/./sannfe.sh && sudo chown mgeweb:mgeweb / && sudo chown -R mgeweb:mgeweb /home/mgeweb/SanNFe /home/mgeweb/wildfly_producao/standalone/log /home/mgeweb/impressao /home/mgeweb/repositorio && sleep 2 && /home/mgeweb/wildfly_producao/bin/./standalone.sh -Djape.lazy.init=true -Djape.lob.fields.as.lazy=true -Djape.ignore.ligacao.inconsistente=true"]
  ports:
    - 8080
  #mem_limit: '1536m' 

sas:
  image: paulohms/sas:1.0
  restart: always
  environment:
    - IP_BD_JIVAW=${ip_bd}
    - PORTA_BD_JIVAW=${porta_bd}
    - SID_BD_JIVAW=${sid_bd}
    - USUARIO_BD_JIVAW=${usuario_bd}
    - SENHA_BD_JIVAW=${senha_bd}
    - IP_CONTAINER=${agent_ip}
  command: ["/bin/sh","-c", "java -jar /opt/DSM/docker-sas-manager.jar && sleep 2 & /opt/SAS*/bin/./run-sas.sh && sleep 2 && tail -f /opt/SAS*/log/server*.log"]

#load-balancer:
#    image: rancher/lb-service-haproxy:v0.7.9
#    ports:
#      - 8080
#    labels:
#      io.rancher.container.agent.role: environmentAdmin
#      io.rancher.container.create_agent: 'true'
#
